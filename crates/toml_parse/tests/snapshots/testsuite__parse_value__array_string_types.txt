EventResults {
    input: "[ \"all\", 'strings', \"\"\"are the same\"\"\", '''type''']",
    events: [
        Event {
            kind: Error,
            encoding: None,
            span: 0..1,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 1..2,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 2..7,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 7..8,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 8..9,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 9..18,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 18..19,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 19..20,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 20..38,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 38..39,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 39..40,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 40..50,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 50..51,
        },
        Event {
            kind: Error,
            encoding: None,
            span: 51..51,
        },
    ],
    errors: [
        ParseError {
            context: 0..1,
            description: "`[`",
            expected: [],
            unexpected: 0..1,
        },
        ParseError {
            context: 1..2,
            description: "whitedpace",
            expected: [],
            unexpected: 1..2,
        },
        ParseError {
            context: 2..7,
            description: "basic string",
            expected: [],
            unexpected: 2..7,
        },
        ParseError {
            context: 7..8,
            description: "`,`",
            expected: [],
            unexpected: 7..8,
        },
        ParseError {
            context: 8..9,
            description: "whitedpace",
            expected: [],
            unexpected: 8..9,
        },
        ParseError {
            context: 9..18,
            description: "literal string",
            expected: [],
            unexpected: 9..18,
        },
        ParseError {
            context: 18..19,
            description: "`,`",
            expected: [],
            unexpected: 18..19,
        },
        ParseError {
            context: 19..20,
            description: "whitedpace",
            expected: [],
            unexpected: 19..20,
        },
        ParseError {
            context: 20..38,
            description: "multi-line basic string",
            expected: [],
            unexpected: 20..38,
        },
        ParseError {
            context: 38..39,
            description: "`,`",
            expected: [],
            unexpected: 38..39,
        },
        ParseError {
            context: 39..40,
            description: "whitedpace",
            expected: [],
            unexpected: 39..40,
        },
        ParseError {
            context: 40..50,
            description: "multi-line literal string",
            expected: [],
            unexpected: 40..50,
        },
        ParseError {
            context: 50..51,
            description: "`]`",
            expected: [],
            unexpected: 50..51,
        },
        ParseError {
            context: 51..51,
            description: "end-of-input",
            expected: [],
            unexpected: 51..51,
        },
    ],
}
